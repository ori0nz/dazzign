version: '3.8'

services:
  frontend:
    container_name: dazzign-frontend
    build:
      context: ../frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "5173:5173"
    volumes:
      - ../frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://backend:8000
    depends_on:
      - backend

  backend:
    container_name: dazzign-backend
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "${PORT:-8000}:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-dazzign}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-dazzign}
      - DB_HOST=db
      - DB_PORT=5432
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL}
      - AWS_REGION=${AWS_REGION:-us-west-2}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - USE_FAKE_DATA=False
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy

  db:
    container_name: dazzign-db
    build:
      context: .
      dockerfile: Dockerfile.postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-dazzign}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - dazzign_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

# Named volume for data persistence
# Actual location is managed by Docker and depends on your OS
# See README.md for details on where Docker stores this data
volumes:
  dazzign_postgres_data: 